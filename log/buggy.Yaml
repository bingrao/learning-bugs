public class DummyClass {

    public static void main(java.lang.String[] a) {
        main.DAOTest.TestCineplexDAO();
        main.DAOTest.TestCinemaDAO();
        main.DAOTest.TestMovieDAO();
        main.DAOTest.TestShowTimeDAO();
        main.DAOTest.TestBookingDAO();
    }
}
---
root(Type=CompilationUnit): 
    types: 
        - type(Type=ClassOrInterfaceDeclaration): 
            isInterface: "false"
            name(Type=SimpleName): 
                identifier: "DummyClass"
            members: 
                - member(Type=MethodDeclaration): 
                    body(Type=BlockStmt): 
                        statements: 
                            - statement(Type=ExpressionStmt): 
                                expression(Type=MethodCallExpr): 
                                    name(Type=SimpleName): 
                                        identifier: "TestCineplexDAO"
                                    scope(Type=FieldAccessExpr): 
                                        name(Type=SimpleName): 
                                            identifier: "DAOTest"
                                        scope(Type=NameExpr): 
                                            name(Type=SimpleName): 
                                                identifier: "main"
                            - statement(Type=ExpressionStmt): 
                                expression(Type=MethodCallExpr): 
                                    name(Type=SimpleName): 
                                        identifier: "TestCinemaDAO"
                                    scope(Type=FieldAccessExpr): 
                                        name(Type=SimpleName): 
                                            identifier: "DAOTest"
                                        scope(Type=NameExpr): 
                                            name(Type=SimpleName): 
                                                identifier: "main"
                            - statement(Type=ExpressionStmt): 
                                expression(Type=MethodCallExpr): 
                                    name(Type=SimpleName): 
                                        identifier: "TestMovieDAO"
                                    scope(Type=FieldAccessExpr): 
                                        name(Type=SimpleName): 
                                            identifier: "DAOTest"
                                        scope(Type=NameExpr): 
                                            name(Type=SimpleName): 
                                                identifier: "main"
                            - statement(Type=ExpressionStmt): 
                                expression(Type=MethodCallExpr): 
                                    name(Type=SimpleName): 
                                        identifier: "TestShowTimeDAO"
                                    scope(Type=FieldAccessExpr): 
                                        name(Type=SimpleName): 
                                            identifier: "DAOTest"
                                        scope(Type=NameExpr): 
                                            name(Type=SimpleName): 
                                                identifier: "main"
                            - statement(Type=ExpressionStmt): 
                                expression(Type=MethodCallExpr): 
                                    name(Type=SimpleName): 
                                        identifier: "TestBookingDAO"
                                    scope(Type=FieldAccessExpr): 
                                        name(Type=SimpleName): 
                                            identifier: "DAOTest"
                                        scope(Type=NameExpr): 
                                            name(Type=SimpleName): 
                                                identifier: "main"
                    type(Type=VoidType): 
                    name(Type=SimpleName): 
                        identifier: "main"
                    modifiers: 
                        - modifier(Type=Modifier): 
                            keyword: "PUBLIC"
                        - modifier(Type=Modifier): 
                            keyword: "STATIC"
                    parameters: 
                        - parameter(Type=Parameter): 
                            isVarArgs: "false"
                            name(Type=SimpleName): 
                                identifier: "a"
                            type(Type=ArrayType): 
                                origin: "TYPE"
                                componentType(Type=ClassOrInterfaceType): 
                                    name(Type=SimpleName): 
                                        identifier: "String"
                                    scope(Type=ClassOrInterfaceType): 
                                        name(Type=SimpleName): 
                                            identifier: "lang"
                                        scope(Type=ClassOrInterfaceType): 
                                            name(Type=SimpleName): 
                                                identifier: "java"
            modifiers: 
                - modifier(Type=Modifier): 
                    keyword: "PUBLIC"
...